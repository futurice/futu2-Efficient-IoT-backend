<head>
  <title><%= title %></title>
  <link rel="stylesheet" href="/css/bootstrap.min.css">
  <script src="/socket.io/socket.io.js"></script>
  <script src="//code.jquery.com/jquery-1.11.3.min.js"></script>
  <style type="text/css">
    .input-group {
      margin-bottom: 15px;
      max-width: 300px;
    }
  </style>
</head>
<body>
<div class="container-fluid">
  <div class="page-header">
    <h1><%= title %></h1>
  </div>
    <div class="container-fluid">
      <div class="row">
        <form class="form" id="location-form">
          <div class="form-group">
            <label class="col-4 control-label">Location</label>
              <div class="input-group">
                <span class="input-group-addon">User</span>
                <input id="location-user" type="text" class="form-control" placeholder="User email or name or avatar">
              </div>
            <div class="input-group">
              <span class="input-group-addon">Floor</span>
              <input id="location-floor" type="number" class="form-control" placeholder="Default 7" value="7">
            </div>
              <div class="input-group">
                <span class="input-group-addon">Beacon 1</span>
                <input class="form-control new-distance" data-id="futu-b1-32095-19454" type="number" placeholder="Distance meters">
              </div>
              <div class="input-group">
                <span class="input-group-addon">Beacon 2</span>
                <input class="form-control new-distance" data-id="futu-b2-23964-38945" type="number" placeholder="Distance meters">
              </div>
              <div class="input-group">
                <span class="input-group-addon">Beacon 3</span>
                <input class="form-control new-distance" data-id="futu-b3-21061-29133" type="number" placeholder="Distance meters">
              </div>
            </div>
          <button id="send-location" class="btn btn-default" type="submit">Send location</button>
        </form>
        <div id="location"><p>No location</p></div><br/><br/>
      </div>

      <div class="row">
        <form class="form" id="form2" onsubmit="return false;">
          <div class="form-group">
            <label for="exampleInputFile" class="col-4">Cake image</label>
            <input type="file" id="image">
          </div>
        </form>
        <div><img id="cake-image" src=""  alt="no image" style="width:300px;" class="img-rounded"></div><br/><br/>
    </div>

    <div class="row">
      <form class="form" id="form2" onsubmit="return false;">
        <div class="form-group">
          <label class="col-4 control-label">Other messages</label>
          <div class="input-group">
            <select id="message-type" multiple class="form-control">
              <option value="toilet">toilet</option>
              <option value="cafe">cafe</option>
            </select>
            <br/>
          </div>
        </div>
        <div class="form-group">
          <div class="input-group">
            <input id="message-value" type="text" class="form-control" placeholder="Value" style="width:100%">
          </div>
        </div>
      </form>
      <div id="message"><p>No location</p></div><br/><br/>
    </div>
  </div>
</div>
<script>
  var host = window.location.protocol + '//' + window.location.host;
  var socket = io.connect(host);


  $('document').ready(function(){
    var timestamp = new Date().valueOf();

    $('#send-location').on('click', function (e) {
      e.preventDefault();
      var user = $('#location-user').val();
      var floor = $('#location-floor').val();
      var $distances = $('.new-distance');
      $distances.each(function(i, el){
        var id =  $(el).data('id');
        var val =  $(el).val();
        socket.emit('beacon', {
          id: id,
          email: user,
          floor: parseInt(floor),
          distance: val === "" ? 0 : parseInt(val)
        });
      });
    });

    socket.on('location', function(msg){
      $('#location')
        .html([
          '<address>',
          ' <strong>' + msg.email + '</strong><br/>',
          ' <abbr>x:</abbr> ' + msg.x + '<br/>',
          ' <abbr>y:</abbr> ' + msg.y + '<br/>',
          '</address>'
        ]);
    });

    $('#message-type, #message-value').on('keyup change', function () {
      var type = $('#message-type').val();
      var value = $('#message-value').val();
      socket.emit('message', {
        type: type,
        value: value
      });
    });

    var handleFileSelect = function(evt) {
      var files = evt.target.files;
      var file = files[0];

      if (files && file) {
        var reader = new FileReader();

        reader.onload = function(readerEvt) {
          var binaryString = readerEvt.target.result;

          socket.emit('message', {
            type: 'cake',
            value: btoa(binaryString)
          });
        };

        reader.readAsBinaryString(file);
      }
    };

    $('#image').on('change', handleFileSelect);

    socket.on('stream', function(messages) {
      $.each(messages, function(index, message){
        if(message.type === 'cake') {
          $('#cake-image').attr('src', 'data:image/png;base64,' + message.value)
        } else {
          $('#message')
            .html([
              '<address>',
              ' <strong>' + message.type + '</strong><br/>',
              ' <abbr>value:</abbr> ' + message.value + '<br/>',
              '</address>'
            ]);
        }
      });
    });

  });
</script>
</body>
